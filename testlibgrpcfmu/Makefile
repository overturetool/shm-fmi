

CXX = g++
CPPFLAGS += -I/usr/local/include  -g
CXXFLAGS += -std=c++11
LDFLAGS += -L/usr/local/lib -lgrpc -lgpr -lprotobuf -lgrpc++_unsecure -lpthread -ldl


#test: MainTest.o ExternalClient_Tests.o

#MainTest.o :
#	$(CXX) $^ $(LDFLAGS) -o $@


#ExternalClient_Tests.o: 


# A sample Makefile for building Google Test and using it in user
# tests.  Please tweak it to suit your environment and project.  You
# may want to move it to your project's root directory.
#
# SYNOPSIS:
#
#   make [all]  - makes everything.
#   make TARGET - makes the given target.
#   make clean  - removes all files generated by make.

# Please tweak the following variable definitions as needed by your
# project, except GTEST_HEADERS, which you can use in your own targets
# but shouldn't modify.

# Points to the root of Google Test, relative to where this file is.
# Remember to tweak this if you move this file.
GTEST_DIR = ../third_party/googletest/googletest/

# Where to find user code.
USER_DIR = .

# Flags passed to the preprocessor.
# Set Google Test's header directory as a system directory, such that
# the compiler doesn't generate warnings in Google Test headers.
CPPFLAGS += -isystem $(GTEST_DIR)/include

# Flags passed to the C++ compiler.
CXXFLAGS += -g -Wall -Wextra -pthread

# All tests produced by this Makefile.  Remember to add new tests you
# created to the list.
TESTS = external_client_unittests

# All Google Test headers.  Usually you shouldn't change this
# definition.
GTEST_HEADERS = $(GTEST_DIR)/include/gtest/*.h \
                $(GTEST_DIR)/include/gtest/internal/*.h

# House-keeping build targets.

all : $(TESTS)

clean :
	rm -f $(TESTS) gtest.a gtest_main.a *.o

# Builds gtest.a and gtest_main.a.

# Usually you shouldn't tweak such internal variables, indicated by a
# trailing _.
GTEST_SRCS_ = $(GTEST_DIR)/src/*.cc $(GTEST_DIR)/src/*.h $(GTEST_HEADERS)

# For simplicity and to avoid depending on Google Test's
# implementation details, the dependencies specified below are
# conservative and not optimized.  This is fine as Google Test
# compiles fast and for ordinary users its source rarely changes.
gtest-all.o : $(GTEST_SRCS_)
	$(CXX) $(CPPFLAGS) -I$(GTEST_DIR) $(CXXFLAGS) -c \
            $(GTEST_DIR)/src/gtest-all.cc

gtest_main.o : $(GTEST_SRCS_)
	$(CXX) $(CPPFLAGS) -I$(GTEST_DIR) $(CXXFLAGS) -c \
            $(GTEST_DIR)/src/gtest_main.cc

gtest.a : gtest-all.o
	$(AR) $(ARFLAGS) $@ $^

gtest_main.a : gtest-all.o gtest_main.o
	$(AR) $(ARFLAGS) $@ $^


# Builds a sample test.  A test should link with either gtest.a or
# gtest_main.a, depending on whether it defines its own main()
# function.



ExternalClient_Tests.o : ExternalClient_Tests.cpp $(GTEST_HEADERS) fmu-loader.h
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -Iinclude -Iinclude/fmi -DFMULIB=\"../libgrpcfmu/libgrpcfmu.so\" -pthread -c ExternalClient_Tests.cpp

DEPS = fmu-loader.h
%.o: %.c $(DEPS)
	$(CC) $(CFLAGS) -DFMI_COSIMULATION -Iinclude -Iinclude/fmi -c -o $@ $<

external_client_unittests : ExternalClient_Tests.o fmu-loader.o gtest_main.a
	$(CXX) $^ $(LDFLAGS) -lpthread -o $@

fmu:
	make -C ../libgrpcfmi

../grpcfmi-server/target/fmi-server-7-jar-with-dependencies.jar:
	cd ../grpcfmi-server/ && mvn clean package

test: external_client_unittests fmu ../grpcfmi-server/target/fmi-server-7-jar-with-dependencies.jar
	../grpcfmi-server/start-debug-server.sh
	LD_LIBRARY_PATH=../libgrpcfmi ./external_client_unittests
	../grpcfmi-server/stop-debug-server.sh

