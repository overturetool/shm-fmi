syntax = "proto3";

option java_generic_services = true;
option java_package= "com.lausdahl.examples";
//option java_multiple_files = true;


package service;

service Fmu
{

//	rpc fmi2GetVersion(Empty) returns(VersionReply);
	rpc fmi2Instantiate(Fmi2InstantiateRequest) returns(Fmi2StatusReply);

	rpc fmi2SetupExperiment(Fmi2SetupExperimentRequest) returns(Fmi2StatusReply);
	rpc fmi2EnterInitializationMode(Fmi2Empty) returns(Fmi2StatusReply);
	rpc fmi2ExitInitializationMode(Fmi2Empty) returns(Fmi2StatusReply);
	rpc fmi2Terminate(Fmi2Empty) returns(Fmi2StatusReply);
	rpc fmi2Reset(Fmi2Empty) returns(Fmi2StatusReply);
	//Maybe just kill the process! rpc fmi2FreeInstance

	rpc fmi2SetDebugLogging(Fmi2SetDebugLoggingRequest) returns(Fmi2StatusReply);

	//gets
	rpc fmi2GetReal(Fmi2GetRequest) returns(Fmi2GetRealReply);
	rpc fmi2GetInteger(Fmi2GetRequest) returns(Fmi2GetIntegerReply);
	rpc fmi2GetBoolean(Fmi2GetRequest) returns(Fmi2GetBooleanReply);
	rpc fmi2GetString(Fmi2GetRequest) returns(Fmi2GetStringReply);

	//sets
	rpc fmi2SetReal(Fmi2SetRealRequest) returns(Fmi2StatusReply); 
	rpc fmi2SetInteger(Fmi2SetIntegerRequest) returns(Fmi2StatusReply); 
	rpc fmi2SetBoolean(Fmi2SetBooleanRequest) returns(Fmi2StatusReply); 
	rpc fmi2SetString(Fmi2SetStringRequest) returns(Fmi2StatusReply); 

	rpc fmi2DoStep(Fmi2DoStepRequest) returns(Fmi2StatusReply);

	//status messages
	rpc fmi2GetStatus(Fmi2StatusRequest) returns (Fmi2StatusReply);
	rpc fmi2GetRealStatus(Fmi2StatusRequest) returns (Fmi2RealStatusReply);
	rpc fmi2GetIntegerStatus(Fmi2StatusRequest) returns (Fmi2IntegerStatusReply);
	rpc fmi2GetBooleanStatus(Fmi2StatusRequest) returns (Fmi2BooleanStatusReply);
	rpc fmi2GetStringStatus(Fmi2StatusRequest) returns (Fmi2StringStatusReply);

	//into-cps messages
	rpc fmi2GetMaxStepSize(Fmi2Empty) returns(Fmi2GetMaxStepSizeReply);

	//logging, a mapping of callback functions
	rpc fmi2Log(Fmi2LogRequest) returns (Fmi2Empty);
}

message Fmi2SetupExperimentRequest{
	bool toleranceDefined=1;
	double tolerance=2;
	double startTime=3;
	bool stopTimeDefined=4;
	double stopTime=5;
}


message Fmi2SetDebugLoggingRequest{
	bool loggingOn =1;
	int32 categoriesSize=2;
	repeated string catogories = 3;
}



//
// Get
//
message Fmi2GetRequest{
	repeated int32 valueReference=1; //slidly too small
	int32 size=2;
}

message Fmi2GetRealReply{
	repeated double values=1;
}

message Fmi2GetIntegerReply{
	repeated int32 values=1;
}

message Fmi2GetBooleanReply{
	repeated bool values=1;
}

message Fmi2GetStringReply{
	repeated string values=1;
}

//
// Set
//
message Fmi2SetRealRequest{
	repeated int32 valueReference=1;
	repeated double values=2;
}

message Fmi2SetIntegerRequest{
	repeated int32 valueReference=1;
	repeated int32 values=2;
}

message Fmi2SetBooleanRequest{
	repeated int32 valueReference=1;
	repeated bool values=2;
}

message Fmi2SetStringRequest{
	repeated int32 valueReference=1;
	repeated string values=2;
}

//
// do step
//
message Fmi2DoStepRequest{
	double currentCommunicationPoint = 1;
	double communicationStepSize = 2;
}

//
// instantiate
//
message Fmi2InstantiateRequest{
//fmi2Type fmuType, fmi2String fmuGUID,
//		fmi2String fmuResourceLocation, const fmi2CallbackFunctions *functions, fmi2Boolean visible,
//		fmi2Boolean loggingOn

	string instanceName=1;
	string fmuGuid=2;
	string fmuResourceLocation=3;
	bool visible = 4;
	bool logginOn=5;
	string callbackShmName=6;
}

//
// Other
//
message Fmi2Empty{}

message Fmi2LogRequest{
	//fmi2ComponentEnvironment componentEnvironment
	string instanceName=1;
	Fmi2StatusReply status=2;
	string category=3;
	string logMessage=4;
}

//status
message Fmi2StatusReply{
	//the status
	enum Status{
		Ok = 0;
		Warning = 1;
		Discard = 2;
		Error = 3;
		Fatal = 4;
		Pending = 5;
	}
	Status status = 1;
}

message Fmi2StatusRequest
{
		enum FmiStatusKind{
			fmi2DoStepStatus=0;
			fmi2PendingStatus=1;
			fmi2LastSuccessfulTime=2;
			fmi2Terminated=3;
		}
	FmiStatusKind status = 1;
}

message Fmi2RealStatusReply{
	double value = 1;
}

message Fmi2IntegerStatusReply{
	int32 value = 1;
}

message Fmi2BooleanStatusReply{
	bool value = 1;
}

message Fmi2StringStatusReply{
	string value = 1;
}

message Fmi2GetMaxStepSizeReply
{
	double maxStepSize =1;
}



//callback logging

message Fmi2LogReply{
  string value = 1;
 enum Status{   
    Ok = 0;
    Warning = 1;
    Discard = 2;
    Error = 3;
    Fatal = 4;
    Pending = 5;
  }
  Status status = 2;
  string category =3;
}
